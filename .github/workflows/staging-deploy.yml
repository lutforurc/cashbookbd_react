name: Staging User-Portal CI/CD Pipeline

on:
  push:
    branches:
      - react-staging

jobs:
  build-and-deploy:
    name: Build and Deploy React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        env:
          CI: true
        run: npm run build

      # Optional: upload artifact for debugging/rollback
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist
          if-no-files-found: error
          retention-days: 5

      - name: Deploy to VPS via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          SSH_USER:        ${{ secrets.STAGING_SSH_USER }}
          SSH_HOST:        ${{ secrets.STAGING_SSH_HOST }}
          SSH_PORT:        ${{ secrets.STAGING_SSH_PORT }}
        run: |
          set -Eeuo pipefail

          # Fail fast if secrets are missing
          test -n "${SSH_PRIVATE_KEY}" || (echo "‚ùå STAGING_SSH_PRIVATE_KEY is empty"; exit 1)
          test -n "${SSH_USER}"        || (echo "‚ùå STAGING_SSH_USER is empty"; exit 1)
          test -n "${SSH_HOST}"        || (echo "‚ùå STAGING_SSH_HOST is empty"; exit 1)
          : "${SSH_PORT:=22}"  # default to 22 if not provided

          # Prepare SSH
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Trust host key (handle non-standard ports)
          ssh-keyscan -p "$SSH_PORT" -H "$SSH_HOST" \
            | sed "s/^$SSH_HOST/[${SSH_HOST}]:${SSH_PORT}/" >> ~/.ssh/known_hosts

          # Confirm build output exists
          echo "üì¶ Local build contents:"
          ls -la dist/ || (echo "‚ùå dist/ not found. Did the build produce a different outDir?"; exit 1)

          # Deploy with rsync
          rsync -avz \
            --delete-delay \
            -e "ssh -p ${SSH_PORT}" \
            dist/ "${SSH_USER}@${SSH_HOST}:/home/accounts_staging/htdocs/accounts.staging.cashbookbd.com/"

      - name: Restart web server on VPS
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
          SSH_PORT: ${{ secrets.STAGING_SSH_PORT }}
        run: |
          set -Eeuo pipefail
          : "${SSH_PORT:=22}"
          ssh -p "$SSH_PORT" "${SSH_USER}@${SSH_HOST}" "sudo systemctl restart nginx"
